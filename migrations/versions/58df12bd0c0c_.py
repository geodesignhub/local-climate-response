"""empty message

Revision ID: 58df12bd0c0c
Revises: 
Create Date: 2025-03-02 17:00:10.517038

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '58df12bd0c0c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('adaptationtarget',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('target', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('adaptationtarget', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_adaptationtarget_target'), ['target'], unique=True)

    op.create_table('apiversion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('apiversion', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_apiversion_version'), ['version'], unique=True)

    op.create_table('impact_intensity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('intensity', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('impact_intensity', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_impact_intensity_intensity'), ['intensity'], unique=True)

    op.create_table('impact_unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('impact_unit', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_impact_unit_description'), ['description'], unique=False)
        batch_op.create_index(batch_op.f('ix_impact_unit_unit'), ['unit'], unique=True)

    op.create_table('naturebasedsolution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('definition', sa.String(), nullable=False),
    sa.Column('cobenefits', sa.String(), nullable=False),
    sa.Column('specificdetails', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('geometry', geoalchemy2.types.Geometry(srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True, spatial_index=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('naturebasedsolution', schema=None) as batch_op:
        batch_op.create_index('idx_naturebasedsolution_geometry', ['geometry'], unique=False, postgresql_using='gist')
        batch_op.create_index(batch_op.f('ix_naturebasedsolution_cobenefits'), ['cobenefits'], unique=False)
        batch_op.create_index(batch_op.f('ix_naturebasedsolution_definition'), ['definition'], unique=False)
        batch_op.create_index(batch_op.f('ix_naturebasedsolution_location'), ['location'], unique=False)
        batch_op.create_index(batch_op.f('ix_naturebasedsolution_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_naturebasedsolution_specificdetails'), ['specificdetails'], unique=False)

    op.create_table('impact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('magnitude', sa.Float(), nullable=False),
    sa.Column('intensity_id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('solution_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['intensity_id'], ['impact_intensity.id'], ),
    sa.ForeignKeyConstraint(['solution_id'], ['naturebasedsolution.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['impact_unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('impact', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_impact_magnitude'), ['magnitude'], unique=False)

    op.create_table('nbs_target_assoc',
    sa.Column('nbs_id', sa.Integer(), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['nbs_id'], ['naturebasedsolution.id'], ),
    sa.ForeignKeyConstraint(['target_id'], ['adaptationtarget.id'], ),
    sa.PrimaryKeyConstraint('nbs_id', 'target_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('nbs_target_assoc')
    with op.batch_alter_table('impact', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_impact_magnitude'))

    op.drop_table('impact')
    with op.batch_alter_table('naturebasedsolution', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_naturebasedsolution_specificdetails'))
        batch_op.drop_index(batch_op.f('ix_naturebasedsolution_name'))
        batch_op.drop_index(batch_op.f('ix_naturebasedsolution_location'))
        batch_op.drop_index(batch_op.f('ix_naturebasedsolution_definition'))
        batch_op.drop_index(batch_op.f('ix_naturebasedsolution_cobenefits'))
        batch_op.drop_index('idx_naturebasedsolution_geometry', postgresql_using='gist')

    op.drop_table('naturebasedsolution')
    with op.batch_alter_table('impact_unit', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_impact_unit_unit'))
        batch_op.drop_index(batch_op.f('ix_impact_unit_description'))

    op.drop_table('impact_unit')
    with op.batch_alter_table('impact_intensity', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_impact_intensity_intensity'))

    op.drop_table('impact_intensity')
    with op.batch_alter_table('apiversion', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_apiversion_version'))

    op.drop_table('apiversion')
    with op.batch_alter_table('adaptationtarget', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_adaptationtarget_target'))

    op.drop_table('adaptationtarget')
    # ### end Alembic commands ###

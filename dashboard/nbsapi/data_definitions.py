# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2025-03-12T14:03:50+00:00

from __future__ import annotations
from geojson import FeatureCollection
from dataclasses import dataclass
from typing import List, Optional, Union


@dataclass
class Contact:
    """
    A class to represent a contact.
    Attributes
    ----------
    website : str
        The website URL of the contact.
    """
    
    website: str


@dataclass
class APIVersion:
    """
    A class to represent the API version response.
    Attributes:
    ----------
    version : float
        The version number of the API.
    """

    version: float


@dataclass
class BodyLoginForAccessTokenAuthTokenPost:
    """
    Represents the body of a request for obtaining an access token using login credentials.
    Attributes:
        username (str): The username of the user.
        password (str): The password of the user.
        grant_type (Optional[str]): The type of grant being requested. Defaults to None.
        scope (Optional[str]): The scope of the access request. Defaults to an empty string.
        client_id (Optional[str]): The client ID for the application. Defaults to None.
        client_secret (Optional[str]): The client secret for the application. Defaults to None.
    """

    username: str
    password: str
    grant_type: Optional[str] = None
    scope: Optional[str] = ''
    client_id: Optional[str] = None
    client_secret: Optional[str] = None


@dataclass
class ImpactIntensity:
    """
    A class used to represent the intensity of an impact.
    Attributes
    ----------
    intensity : str
        A string representing the intensity level of the impact.
    """

    intensity: str


@dataclass
class ImpactUnit:
    """
    A class to represent an impact unit.
    Attributes:
    ----------
    unit : str
        The unit of measurement for the impact.
    description : str
        A brief description of the impact unit.
    """

    unit: str
    description: str


@dataclass
class TargetBase:
    type: str


@dataclass
class Token:
    access_token: str
    token_type: str


@dataclass
class User:
    username: str
    email: str
    first_name: str
    last_name: str
    disabled: Optional[bool] = False


@dataclass
class UserWrite:
    username: str
    email: str
    first_name: str
    last_name: str
    password: str


@dataclass
class ValidationError:
    loc: List[Union[str, int]]
    msg: str
    type: str


@dataclass
class AdaptationTargetRead:
    adaptation: TargetBase
    value: int


@dataclass
class HTTPValidationError:
    detail: Optional[List[ValidationError]] = None


@dataclass
class ImpactBase:
    magnitude: float
    unit: ImpactUnit
    intensity: ImpactIntensity


@dataclass
class NatureBasedSolutionCreate:
    name: str
    definition: str
    cobenefits: str
    specificdetails: str
    location: str
    impacts: Optional[List[ImpactBase]] = None
    adaptations: Optional[List[AdaptationTargetRead]] = None


@dataclass
class NatureBasedSolutionRead:
    name: str
    definition: str
    cobenefits: str
    specificdetails: str
    location: str
    geometry: FeatureCollection
    id: int
    impacts: Optional[List[ImpactBase]] = None
    solution_targets: Optional[List[AdaptationTargetRead]] = None

@dataclass
class NatureBasedSolution:
    name: str
    definition: str
    cobenefits: str
    specificdetails: str
    location: str
    id: int
    impacts: Optional[List[ImpactBase]] = None
    solution_targets: Optional[List[AdaptationTargetRead]] = None


@dataclass
class SolutionRequest:
    targets: Optional[List[AdaptationTargetRead]] = None
    intensities: Optional[List[ImpactIntensity]] = None
    bbox: Optional[List[float]] = None

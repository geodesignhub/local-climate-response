# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2025-06-26T10:02:27+00:00


from __future__ import annotations
from dataclasses import dataclass
from turtle import title
from typing import List, Optional, Union, Dict, Any
from geojson import FeatureCollection, Feature


@dataclass
class APIVersion:
    version: int


@dataclass
class BodyLoginForAccessTokenAuthTokenPost:
    username: str
    password: str
    grant_type: Optional[str] = None
    scope: Optional[str] = ""
    client_id: Optional[str] = None
    client_secret: Optional[str] = None


@dataclass
class ClimateImpact:
    temp_reduction: Optional[float] = None
    cool_spot: Optional[float] = None
    evapotranspiration: Optional[float] = None
    groundwater_recharge: Optional[float] = None
    storage_capacity: Optional[float] = None


@dataclass
class Contact:
    website: str


@dataclass
class CostImpact:
    construction_cost: Optional[float] = None
    maintenance_cost: Optional[float] = None
    currency: Optional[str] = "EUR"


@dataclass
class DeltaresApiData:
    constructionCost: Optional[float] = 0.0
    maintenanceCost: Optional[float] = 0.0
    coolSpot: Optional[float] = 0.0
    tempReduction: Optional[float] = 0.0
    captureUnit: Optional[float] = 0.0
    filteringUnit: Optional[float] = 0.0
    settlingUnit: Optional[float] = 0.0
    Fmeas_area: Optional[float] = 0.0
    groundwater_recharge: Optional[float] = 0.0
    evapotranspiration: Optional[float] = 0.0
    storageCapacity: Optional[float] = 0.0


@dataclass
class DeltaresMapSettings:
    center: Dict[str, float]
    zoom: float
    customLayers: Optional[List] = None
    layers: Optional[List[Dict[str, Any]]] = None


@dataclass
class DeltaresProjectArea:
    scenarioName: str
    capacity: Dict[str, bool]
    multifunctionality: str
    scale: Dict[str, bool]
    suitability: Dict[str, bool]
    subsurface: str
    surface: str
    soil: str
    slope: str


@dataclass
class DeltaresProperties:
    name: str
    apiData: DeltaresApiData
    measure: str
    color: str
    defaultInflow: float
    defaultDepth: float
    defaultWidth: float
    defaultRadius: float
    hidden: Optional[bool] = False
    areaInflow: Optional[float] = None
    areaDepth: Optional[str] = None
    areaWidth: Optional[float] = None
    areaRadius: Optional[float] = None
    area: Optional[float] = None
    length: Optional[float] = None


@dataclass
class DeltaresTargetValue:
    value: str
    include: Optional[bool] = True


@dataclass
class DeltaresWaterQualityTargets:
    filteringUnit: Optional[DeltaresTargetValue] = None
    captureUnit: Optional[DeltaresTargetValue] = None
    settlingUnit: Optional[DeltaresTargetValue] = None


@dataclass
class ImpactIntensity:
    intensity: str


@dataclass
class ImpactUnit:
    unit: str
    description: str


@dataclass
class LineStringGeometry:
    coordinates: List[List[float]]
    type: str = "LineString"


@dataclass
class MapSettings:
    center: Optional[List[float]] = None
    zoom: Optional[int] = None
    base_layer: Optional[str] = None


@dataclass
class MeasureTypeCreate:
    id: str
    name: str
    description: Optional[str] = None
    default_color: Optional[str] = None
    default_inflow: Optional[float] = None
    default_depth: Optional[float] = None
    default_width: Optional[float] = None
    default_radius: Optional[float] = None


@dataclass
class MeasureTypeRead:
    id: str
    name: str
    description: Optional[str] = None
    default_color: Optional[str] = None
    default_inflow: Optional[float] = None
    default_depth: Optional[float] = None
    default_width: Optional[float] = None
    default_radius: Optional[float] = None


@dataclass
class MeasureTypeUpdate:
    name: Optional[str] = None
    description: Optional[str] = None
    default_color: Optional[str] = None
    default_inflow: Optional[float] = None
    default_depth: Optional[float] = None
    default_width: Optional[float] = None
    default_radius: Optional[float] = None


@dataclass
class PhysicalProperties:
    default_inflow: Optional[float] = None
    default_depth: Optional[float] = None
    default_width: Optional[float] = None
    default_radius: Optional[float] = None
    area_inflow: Optional[float] = None
    area_depth: Optional[float] = None
    area_width: Optional[float] = None
    area_radius: Optional[float] = None


@dataclass
class PointGeometry:
    coordinates: List[float]
    type: str = "Point"


@dataclass
class PolygonGeometry:
    coordinates: List[List[List[float]]]
    type: str = "Polygon"


@dataclass
class BasicProjectDetail:
    title: str
    description: str
    id: str


@dataclass
class ProjectSettings:
    scenario_name: Optional[str] = None
    capacity: Optional[Dict[str, bool]] = None
    multifunctionality: Optional[str] = None
    scale: Optional[Dict[str, bool]] = None
    suitability: Optional[Dict[str, bool]] = None
    subsurface: Optional[str] = None
    surface: Optional[str] = None
    soil: Optional[str] = None
    slope: Optional[str] = None


@dataclass
class SolutionRequestV2:
    targets: Optional[List] = None
    intensities: Optional[List[ImpactIntensity]] = None
    bbox: Optional[List[float]] = None


@dataclass
class StylingProperties:
    color: Optional[str] = "#3388ff"
    hidden: Optional[bool] = False


@dataclass
class TargetValue:
    value: str
    _type: str
    include: Optional[bool] = True


@dataclass
class Token:
    access_token: str
    token_type: str


@dataclass
class ValidationError:
    loc: List[Union[str, int]]
    msg: str
    type: str


@dataclass
class WaterQualityImpact:
    capture_unit: Optional[float] = None
    filtering_unit: Optional[float] = None
    settling_unit: Optional[float] = None


@dataclass
class WaterQualityTargets:
    filtering_unit: Optional[TargetValue] = None
    capture_unit: Optional[TargetValue] = None
    settling_unit: Optional[TargetValue] = None


@dataclass
class ClimateTargets:
    storage_capacity: Optional[TargetValue] = None
    groundwater_recharge: Optional[TargetValue] = None
    evapotranspiration: Optional[TargetValue] = None
    temp_reduction: Optional[TargetValue] = None
    cool_spot: Optional[TargetValue] = None


@dataclass
class CostTargets:
    construction_cost: Optional[TargetValue] = None
    maintenance_cost: Optional[TargetValue] = None


@dataclass
class DeltaresClimateTargets:
    storageCapacity: Optional[DeltaresTargetValue] = None
    groundwater_recharge: Optional[DeltaresTargetValue] = None
    evapotranspiration: Optional[DeltaresTargetValue] = None
    tempReduction: Optional[DeltaresTargetValue] = None
    coolSpot: Optional[DeltaresTargetValue] = None
    Fmeas_area: Optional[DeltaresTargetValue] = None


@dataclass
class DeltaresCostTargets:
    constructionCost: Optional[DeltaresTargetValue] = None
    maintenanceCost: Optional[DeltaresTargetValue] = None


@dataclass
class DeltaresFeature:
    id: str
    properties: DeltaresProperties
    geometry: Dict[str, Any]
    type: str = "Feature"


@dataclass
class DeltaresTargets:
    climate: Optional[DeltaresClimateTargets] = None
    cost: Optional[DeltaresCostTargets] = None
    waterquality: Optional[DeltaresWaterQualityTargets] = None


@dataclass
class GeometryCollectionInput:
    geometries: List[
        Union[
            PointGeometry, LineStringGeometry, PolygonGeometry, GeometryCollectionInput
        ]
    ]
    type: str = "GeometryCollection"


@dataclass
class GeometryCollectionOutput:
    geometries: List[
        Union[
            PointGeometry, LineStringGeometry, PolygonGeometry, GeometryCollectionOutput
        ]
    ]
    type: str = "GeometryCollection"


@dataclass
class HTTPValidationError:
    detail: Optional[List[ValidationError]] = None


@dataclass
class ImpactBase:
    magnitude: float
    unit: ImpactUnit
    intensity: ImpactIntensity


@dataclass
class NatureBasedSolutionCreate:
    name: str
    definition: str
    cobenefits: str
    specificdetails: str
    location: str
    geometry: Optional[
        Union[
            PointGeometry,
            LineStringGeometry,
            PolygonGeometry,
            GeometryCollectionInput,
            FeatureCollection,
            dict,
        ]
    ] = None
    styling: Optional[StylingProperties] = None
    physical_properties: Optional[PhysicalProperties] = None
    area: Optional[float] = None
    length: Optional[float] = None
    measure_id: Optional[str] = None
    impacts: Optional[List[ImpactBase]] = None


@dataclass
class NatureBasedSolutionReadInput:
    name: str
    definition: str
    cobenefits: str
    specificdetails: str
    location: str
    id: int
    geometry: Optional[
        Union[
            PointGeometry,
            LineStringGeometry,
            PolygonGeometry,
            GeometryCollectionInput,
            FeatureCollection,
            dict,
        ]
    ] = None
    styling: Optional[StylingProperties] = None
    physical_properties: Optional[PhysicalProperties] = None
    area: Optional[float] = None
    length: Optional[float] = None
    measure_id: Optional[str] = None
    impacts: Optional[List[EnhancedImpactBaseInput]] = None


@dataclass
class NatureBasedSolutionReadOutput:
    name: str
    definition: str
    cobenefits: str
    specificdetails: str
    location: str
    id: int
    geometry: Optional[
        Union[
            PointGeometry,
            LineStringGeometry,
            PolygonGeometry,
            GeometryCollectionOutput,
            FeatureCollection,
            dict,
        ]
    ] = None
    styling: Optional[StylingProperties] = None
    physical_properties: Optional[PhysicalProperties] = None
    area: Optional[float] = None
    length: Optional[float] = None
    measure_id: Optional[str] = None
    impacts: Optional[List[EnhancedImpactBaseInput]] = None


@dataclass
class NatureBasedSolutionUpdate:
    name: Optional[str] = None
    definition: Optional[str] = None
    cobenefits: Optional[str] = None
    specificdetails: Optional[str] = None
    location: Optional[str] = None
    geometry: Optional[
        Union[
            PointGeometry,
            LineStringGeometry,
            PolygonGeometry,
            GeometryCollectionInput,
            FeatureCollection,
            dict,
        ]
    ] = None
    styling: Optional[StylingProperties] = None
    physical_properties: Optional[PhysicalProperties] = None


@dataclass
class ProjectTargetsInput:
    climate: Optional[ClimateTargets] = None
    cost: Optional[CostTargets] = None
    water_quality: Optional[WaterQualityTargets] = None


@dataclass
class ProjectTargetsOutput:
    climate: Optional[ClimateTargets] = None
    cost: Optional[CostTargets] = None
    water_quality: Optional[WaterQualityTargets] = None


@dataclass
class ProjectUpdate:
    title: Optional[str] = None
    description: Optional[str] = None
    settings: Optional[ProjectSettings] = None
    map: Optional[MapSettings] = None
    targets: Optional[ProjectTargetsInput] = None
    areas: Optional[List[int]] = None


@dataclass
class SpecializedImpacts:
    climate: Optional[ClimateImpact] = None
    water_quality: Optional[WaterQualityImpact] = None
    cost: Optional[CostImpact] = None


@dataclass
class DeltaresSettings:
    area: Dict[str, Any]
    general: Dict[str, str]
    projectArea: DeltaresProjectArea
    targets: DeltaresTargets
    userViewedProjectSettings: Optional[bool] = True
    pluvfloodParam: Optional[Dict[str, float]] = None


@dataclass
class EnhancedImpactBaseInput:
    magnitude: float
    unit: ImpactUnit
    intensity: ImpactIntensity
    specialized: Optional[SpecializedImpacts] = None


@dataclass
class EnhancedImpactBaseOutput:
    magnitude: float
    unit: ImpactUnit
    intensity: ImpactIntensity
    specialized: Optional[SpecializedImpacts] = None


@dataclass
class NatureBasedSolutionFeature:
    geometry: Union[
        PointGeometry,
        LineStringGeometry,
        PolygonGeometry,
        GeometryCollectionOutput,
        Feature,
    ]
    properties: NatureBasedSolutionReadOutput
    type: str = "Feature"
    id: Optional[Union[str, int]] = None


@dataclass
class NatureBasedSolutionFeatureCollection:
    features: List[dict]
    type: str = "FeatureCollection"


@dataclass
class ProjectCreate:
    title: str
    description: Optional[str] = None
    settings: Optional[ProjectSettings] = None
    map: Optional[MapSettings] = None
    targets: Optional[ProjectTargetsInput] = None
    areas: Optional[List[int]] = None


@dataclass
class ProjectReadInput:
    title: str
    id: str
    description: Optional[str] = None
    settings: Optional[ProjectSettings] = None
    map: Optional[MapSettings] = None
    targets: Optional[ProjectTargetsInput] = None
    areas: Optional[List[NatureBasedSolutionReadInput]] = None


@dataclass
class ProjectReadOutput:
    title: str
    id: str
    description: Optional[str] = None
    settings: Optional[ProjectSettings] = None
    map: Optional[MapSettings] = None
    targets: Optional[ProjectTargetsOutput] = None
    areas: Optional[List[NatureBasedSolutionReadOutput]] = None


@dataclass
class DeltaresProjectExport:
    areas: List[DeltaresFeature]
    map: DeltaresMapSettings
    settings: DeltaresSettings
    legalAccepted: Optional[bool] = True
    displayMap: Optional[bool] = True
    measureOverrides: Optional[Dict[str, Dict[str, Any]]] = None
    savedInWorkspace: Optional[str] = None
